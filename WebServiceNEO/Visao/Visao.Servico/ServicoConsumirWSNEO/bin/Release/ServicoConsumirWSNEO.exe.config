<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?Linkid=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" />
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>

  <!-- 
  Bloco de parâmetros de configuração do serviço.
  -->
  <appSettings>
    <!-- FrequenciaExecucao:  0 = Diariamente, 1 = Domingos, 2 = Segundas, 3 = Terças,  4 = Quartas, 5 = Quintas,  6 = Sextas,   7 = Sabados.
        Para esta opção ser ativada, a opção "ExecucaoAcadaMinutos" deve está com "0" -->
    <add key="FrequenciaExecucao" value="0" />
    <!-- Definir a hora que será executado-->
    <add key="HoraExecucao" value="12" />
    <!-- Definir o minuto que será executado-->
    <add key="MinutoExecucao" value="40" />
    <!-- Se definido "0" esta opção "ExecucaoAcadaMinutos" será desativada. Se diferente de zero a opção "FrequenciaExecucao" será desativada -->
    <add key="ExecucaoAcadaMinutos" value="60" />
    <!--Endereço do Webservice da Funrio -->
    <add key="EnderecoWebServiceREST" value="http://funrio.neoeduca.com.br/bi/ " />
    <!--Parâmetros do Webservice da Funrio -->
    <add key="ParametrosWS" value="acao;chave;dataini;datafim" />
    <!--Valores dos Parâmetros do Webservice da Funrio -->
    <add key="ValorParametroChave" value="c9cde844e6eafb11ee6a1f20fc1e593e" />
    <!--Valores dos Parâmetros de Ação (são os métodos) do Webservice da Funrio -->
    <add key="ValoresParametroAcao" value="getDom_Especialidade;getDom_Curso;getDom_Modulo;getDim_Professor;getDom_Hospital;getDim_Turma;getDim_Aluno_Preceptor;getDim_Aula;getFato_Presenca;getFato_Plantao;getFato_Avaliacao;getFato_Permanencia" />
    <!--Aguardando implementação do Método "getDom_Especialidade" pela Master Case-->
    
    <!--<add key="ValoresParametroAcao" value="getDim_Aluno_Preceptor;getFato_Presenca" />-->
    
    <!-- Definir quantos dias serão retornados na consulta. -->
    <add key="QuantidadeDiasBusca" value="7" />
    
    <!-- Definir se a busca vai iniciar pela data data atual do sistema ou pela data de inicio da chave: DataInicioBuscaYYmmDD    
      Valor: True = A busca utiliza a data atual do sistema. 
      Valor: False = A busca utiliza a data da chave: DataInicioBuscaYYmmDD. -->
    <add key="BuscaIniciaDataAtualSistema" value="False" />
    
    <!-- Definir o período da datas serão retornados na consulta. 
        Para habilitar essa opção defina a chave BuscaIniciaDataAtualSistema = False
        Se a chave DataInicioBuscaYYmmDD for deixada em branco, será utilizada a data atual do sistema-->
    <add key="DataInicioBuscaYYmmDD" value="2015-03-30" />

    <!-- Se a chave DataFimBuscaYYmmDD for deixada em branco, será utilizada a data atual do sistema -->
    <add key="DataFimBuscaYYmmDD" value="" />

    <!-- Definir o codigo -1 para os campos chaves que são nulos. Qualquer valor diferente de -1 desabilita esta opção.-->
    <add key="CodigoParaCampoChaveNulo" value="-1" />
    
    <!-- Definir o TimeOut (Milissegundo)de espera para leitura do XML no WebService. -->
    <add key="WSTimeOutLeituraXML" value="300000" />

    <!-- <add key="ClientSettingsProvider.ServiceUri" value="" /> -->
  </appSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1" />
  </startup>
  <castle>
    <using assembly="Domain.Interfaces" />
    <components>
      <component id="RepositorioAluno" service="Domain.Interfaces.IRepositorioAluno,Domain.Interfaces" type="Infrastructure.Data.RepositorioAlunoEF,Infrastructure.Data" />
      <component id="RepositorioAula" service="Domain.Interfaces.IRepositorioAula,Domain.Interfaces" type="Infrastructure.Data.RepositorioAulaEF,Infrastructure.Data" />
      <component id="RepositorioCurso" service="Domain.Interfaces.IRepositorioCurso,Domain.Interfaces" type="Infrastructure.Data.RepositorioCursoEF,Infrastructure.Data" />
      <component id="RepositorioEspecialidade" service="Domain.Interfaces.IRepositorioEspecialidade,Domain.Interfaces" type="Infrastructure.Data.RepositorioEspecialidadeEF,Infrastructure.Data" />
      <component id="RepositorioHospital" service="Domain.Interfaces.IRepositorioHospital,Domain.Interfaces" type="Infrastructure.Data.RepositorioHospitalEF,Infrastructure.Data" />
      <component id="RepositorioModulo" service="Domain.Interfaces.IRepositorioModulo,Domain.Interfaces" type="Infrastructure.Data.RepositorioModuloEF,Infrastructure.Data" />
      <component id="RepositorioProfessor" service="Domain.Interfaces.IRepositorioProfessor,Domain.Interfaces" type="Infrastructure.Data.RepositorioProfessorEF,Infrastructure.Data" />
      <component id="RepositorioTurma" service="Domain.Interfaces.IRepositorioTurma,Domain.Interfaces" type="Infrastructure.Data.RepositorioTurmaEF,Infrastructure.Data" />
      <component id="RepositorioPresenca" service="Domain.Interfaces.IRepositorioFatPresenca,Domain.Interfaces" type="Infrastructure.Data.RepositorioFatPresencaEF,Infrastructure.Data" />
      <component id="RepositorioPlantao" service="Domain.Interfaces.IRepositorioFatPlantao,Domain.Interfaces" type="Infrastructure.Data.RepositorioFatPlantaoEF,Infrastructure.Data" />
      <component id="RepositorioAvaliacao" service="Domain.Interfaces.IRepositorioFatAvaliacao,Domain.Interfaces" type="Infrastructure.Data.RepositorioFatAvaliacaoEF,Infrastructure.Data" />
      <component id="RepositorioPermanenciaPlataforma" service="Domain.Interfaces.IRepositorioFatPermanenciaPlataforma,Domain.Interfaces" type="Infrastructure.Data.RepositorioFatPermanenciaPlataformaEF,Infrastructure.Data" />
      <component id="LogErroAplicacaoRepositorio" service="Domain.Interfaces.IRepositorioLogErroAplicacao,Domain.Interfaces" type="Infrastructure.Data.RepositorioLogErroAplicacaoEF,Infrastructure.Data" />
      <!-- <component id="ServiceLogErroAplicacao" service="Domain.Interfaces.IServiceLogErroAplicacao,Domain.Interfaces"  type="Domain.Service.ServiceLogErroAplicacao,Domain.Service" />-->
    </components>
  </castle>
  <connectionStrings>
    <add name="STAGING_NEO_FUNRIOEntities" connectionString="metadata=res://*/Modelo.csdl|res://*/Modelo.ssdl|res://*/Modelo.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=localhost;initial catalog=STAGING_NEO_FUNRIO;persist security info=True;user id=mastercase;password=EcoMC4321;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
     <!--<add name="STAGING_NEO_FUNRIOEntities" connectionString="metadata=res://*/Modelo.csdl|res://*/Modelo.ssdl|res://*/Modelo.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=10.2.0.23;initial catalog=STAGING_NEO_FUNRIO;persist security info=True;user id=mastercase;password=EcoMC4321;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />-->
  </connectionStrings>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
    <globalization fileEncoding="utf-8" requestEncoding="utf-8" responseEncoding="utf-8" culture="pt-br"/>
  </system.web>
</configuration>